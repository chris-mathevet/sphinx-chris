var codeNode={}
var codemirrors={}

function getCookie(name) {
  if (!document.cookie) {
    return null;
  }
  const xsrfCookies = document.cookie.split(';')
    .map(c => c.trim())
    .filter(c => c.startsWith(name + '='));

  if (xsrfCookies.length === 0) {
    return null;
  }
  return decodeURIComponent(xsrfCookies[0].split('=')[1]);
}


function marquerReussi(hash, tentative)
{
    let currentCM   = codemirrors[hash];
    let currentNode = codeNode[hash];
    let bouton = currentNode.children("button")[0];
    bouton.innerHTML="Re-Envoyer";
    let reussi = $(`<div class='pcap_feliciations'>${tentative.feedbacks_html}</div>`);
    if(currentNode.children(".pcap_resultats").length>0)
         currentNode.children(".pcap_resultats").replaceWith(reussi);
    else
         currentNode.append(reussi);
}

function marquerARetenter(hash, reponse, language)
{
    let currentCM   = codemirrors[hash];
    let currentNode = codeNode[hash];
    let bouton = currentNode.children("button")[0];
    bouton.innerHTML="Envoyer";
    let rate=$(`<div class='pcap_resultats'>${tentative.feedbacks_html}</div>`);
    if(currentNode.children(".pcap_resultats").length>0)
        currentNode.children(".pcap_resultats").replaceWith(rate);
    else
        currentNode.append(rate);

}

async function soumettreSolution(hash,language)
{

    let currentCM   = codemirrors[hash];
    let currentNode = codeNode[hash];
    let bouton = currentNode.children("button")[0]
    bouton.disabled=true;
    bouton.innerHTML='Patientez..';
    const csrfToken = getCookie('csrftoken');

    let reponse = await fetch('{{easypython_api_route}}tentative/?format=json',
    {
      mode        : 'cors',
      method      : 'POST',
      credentials : 'include',
      body        : JSON.stringify(
        {
          'contenu':currentCM.getValue(),
          'exercice'   : hash
        }),
      headers     : {
          'content-type':'application/json',
          'X-CSRFTOKEN': csrfToken
        }
     });

     bouton.disabled=false;
     let feedback = await reponse.json();
     if (reponse.ok && feedback.reussi )
      {
          marquerReussi(hash, feedback);
      }
      else
      {
        marquerARetenter(hash,feedback,language);
      }
}


function remplirNoeudCode(noeud)
{
    let prototype=$(this).html();
    $(this).text("");
    let mode = {"python":"python","java":"text/x-java"}[$(this).attr('language')];
    c=CodeMirror(this, {
          value: prototype,
          mode:mode,
          lineNumbers: true,
          styleActiveLine: true,
          matchBrackets: true
        });

     let bouton=$("<button/>", {
          text:'Envoyer',
          click: function(hash, language){return function(){soumettre(hash,language)}}($(this).attr('hash'), $(this).attr('language')),
          class:'pcap_envoyer',
          type:'button'
     })
     codeNode[$(this).attr('hash')]=$(this);
     codemirrors[$(this).attr('hash')]=c;
     $(this).append(bouton);
}

function reponseToJson(reponse)
{
    return reponse.json();
}

async function setInfosExercices()
{
  let exercices ="";
  for(let elem in codeNode)
   {
        exercices+=elem+",";
   }

   let httpResponse = await fetch("{{easypython_api_route}}exercice/?exercices="+exercices+"&reussi=true&format=json",
    {
      mode        :'cors',
      method      : 'GET',
      credentials : 'include',
      headers     : {
          'content-type':'application/json'
        }
     });
    let reponse = await httpResponse.json();
    for(let elem of reponse.objects)
       codeNode[elem["hashCode"]].append($("<div class='alert alert-success' role='alert'>Déja Réussi !!</div>"));
}

document.addEventListener("DOMContentLoaded", async function(){
  window.soumettre = soumettreSolution;
  let zonesCode = $(".easypython");
  zonesCode.each(remplirNoeudCode);
  await setInfosExercices();
  });

/*
// TODO : pour enregistrer le début de résolution d'exo
const observer = new IntersectionObserver(function(entries) {
    console.log(entries);
    entries.forEach(function(entry){
    	           if(entry.intersectionRatio >= 0.75 ){
                  console.log(entry.target);
                }
                });
  }, { threshold: 0.75 });

observer.observe(document.querySelector(".easypython"));
*/
